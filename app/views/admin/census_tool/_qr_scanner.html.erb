<div>
  <div>
    <a class="button" id="startButton">Empezar</a>
    <a class="button" id="resetButton">Resetear</a>
  </div>

  <div>
    <video id="video" width="300" height="200" style="border: 1px solid gray"></video>
  </div>

  <div id="sourceSelectPanel" style="display:none">
    <label for="sourceSelect">Selecciona una c√°mara:</label>
    <select id="sourceSelect">
    </select>
  </div>
  <div>
    <label for="decoding-style"> Tipo de escaneo:</label>
    <select id="decoding-style" size="1" >
      <option value="una vez">De uno en uno</option>
      <option value="continuamente">Continuamente</option>
    </select>
  </div>

  <pre><code id="error_text"></code></pre>
</div>
<audio class="hide" id="correct-audio" controls preload="none">
  <source src="../audios/pause.mp3" type="audio/mp3">
</audio>
<audio class="hide" id="wrong-audio" controls preload="none">
  <source src="../audios/wrongBuzzer.mp3" type="audio/mp3">
</audio>
<script type="text/javascript">
  let params = new URLSearchParams(window.location.search);
  let result = "";
  let decoding_index = ""
  if (params.has('decoding_index')){
    decoding_index = params.get('decoding_index');
    document.getElementById('decoding-style').selectedIndex = decoding_index;
  }

  function decodeOnce(codeReader, selectedDeviceId) {
    codeReader.decodeFromInputVideoDevice(selectedDeviceId, 'video').then((hash_text) => {
      let words = hash_text.text.split('+');
      document.getElementById('user_id').value = words[0];
      document.getElementById('user_qr_hash').value = words[1];
      document.getElementById('decoding_index').value = document.getElementById('decoding-style').selectedIndex;
      document.getElementById('form_qr_code').submit();
    }).catch((err) => {
      console.error(err)
      document.getElementById('error_text').textContent = "error: " + err
    })
  }

  function decodeContinuously(codeReader, selectedDeviceId) {
    codeReader.decodeFromInputVideoDeviceContinuously(selectedDeviceId, 'video', (hash_text, err) => {
      if (hash_text) {
        let words = hash_text.text.split('+');
        document.getElementById('user_id').value = words[0];
        document.getElementById('user_qr_hash').value = words[1];
        document.getElementById('decoding_index').value = document.getElementById('decoding-style').selectedIndex;
        document.getElementById('form_qr_code').submit();
      }

      if (err) {

        if (err instanceof ZXing.NotFoundException) {
          console.log('No QR code found.')
        }

        if (err instanceof ZXing.ChecksumException) {
          console.log('A code was found, but it\'s read value was not valid.')
        }

        if (err instanceof ZXing.FormatException) {
          console.log('A code was found, but it was in a invalid format.')
        }
      }
      document.getElementById('error_text').textContent = "error: " + err
    })
  }

  window.addEventListener('load', function () {
    let selectedDeviceId;
    const codeReader = new ZXing.BrowserQRCodeReader()
    console.log('ZXing code reader initialized')

    codeReader.getVideoInputDevices()
      .then((videoInputDevices) => {
        const sourceSelect = document.getElementById('sourceSelect')
        selectedDeviceId = videoInputDevices[0].deviceId
        if (videoInputDevices.length >= 1) {
          videoInputDevices.forEach((element) => {
            const sourceOption = document.createElement('option')
            sourceOption.text = element.label
            sourceOption.value = element.deviceId
            sourceSelect.appendChild(sourceOption)
          })

          sourceSelect.onchange = () => {
            selectedDeviceId = sourceSelect.value;
          };

          const sourceSelectPanel = document.getElementById('sourceSelectPanel')
          sourceSelectPanel.style.display = 'block'
        }

        if (decoding_index == 1) {
          decodeContinuously(codeReader, selectedDeviceId);
        }

        document.getElementById('startButton').addEventListener('click', () => {
          //decodeOnce(codeReader, selectedDeviceId);
          const decodingStyle = document.getElementById('decoding-style').value;

          if (decodingStyle == "una vez") {
            decodeOnce(codeReader, selectedDeviceId);
          } else {
            decodeContinuously(codeReader, selectedDeviceId);
          }
           console.log(`Started decode from camera with id ${selectedDeviceId}`)
        })

        document.getElementById('resetButton').addEventListener('click', () => {
          codeReader.reset()
          document.getElementById('document_vatid').textContent = '';
          console.log('Reset.')
        })

      })
      .catch((err) => {
        console.error(err)
      })

    if (params.has('result')){
      result = params.get('result');
    }

    if (result==='correct'){
      $('#correct-audio').trigger('play');
    }else if (result==='wrong'){
      $('#wrong-audio').trigger('play');
    }

  })
</script>